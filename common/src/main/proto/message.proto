syntax = "proto3";

package com.replog.proto;

option java_package = "com.replog.proto";
option java_outer_classname = "MessageProto";

message Heartbeat {
  string slaveID = 1;            // Unique identifier of slave (length 6)
  int64 slaveTimestamp = 2;      // Data from nanoTime
  string status = 3;             // Status, e.g., "WORKING"
}

message Message {
  string masterID = 1;           // Unique identifier of master (length 6)
  int64 masterTimestamp = 2;     // Data from nanoTime
  double msgIDReal = 3;          // Real part of EndlessCounterState
  double msgIDImg = 4;           // Imaginary part of EndlessCounterState
  string content = 5;            // Message content
}

message Ack {
  string slaveID = 1;            // Unique identifier of slave (length 6)
  int64 masterTimestamp = 2;     // Data from nanoTime
  double msgIDReal = 3;          // Real part of EndlessCounterState
  double msgIDImg = 4;           // Imaginary part of EndlessCounterState
  bool success = 5;              // Success status
}

service MessageService {
  rpc ReplicateMessage(Message) returns (Ack);
}
